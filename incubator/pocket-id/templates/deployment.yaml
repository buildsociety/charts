apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pocket-id.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "pocket-id.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "pocket-id.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pocket-id.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "pocket-id.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: {{ template "pocket-id.fullname" . }}-pvc
          persistentVolumeClaim:
            claimName: {{ template "pocket-id.fullname" . }}-pvc
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PUBLIC_APP_URL
              value: {{ if .Values.ingress.tls.enabled }}https://{{ .Values.ingress.host }}{{- else }}http://{{ .Values.ingress.host }}{{- end }}
            - name: TRUST_PROXY
              value: "true"
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 1411
              protocol: TCP
          volumeMounts:
            - name: {{ template "pocket-id.fullname" . }}-pvc
              mountPath: /app/data
          {{- if .Values.healthCheck.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthCheck.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.healthCheck.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.healthCheck.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.healthCheck.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.healthCheck.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.healthCheck.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.healthCheck.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

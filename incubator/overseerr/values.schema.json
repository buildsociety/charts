{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "type": "object",
  "properties": {
    "global": {
      "type": "object",
      "properties": {
        "timezone": {
          "type": "string",
          "description": "Set the global timezone"
        }
      }
    },
    "overseerr": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable or disable Overseerr"
        },
        "image": {
          "type": "object",
          "properties": {
            "repository": {
              "type": "string",
              "description": "Overseerr image repository"
            },
            "tag": {
              "type": "string",
              "description": "Overseerr image tag"
            },
            "pullPolicy": {
              "type": "string",
              "enum": ["Always", "Never", "IfNotPresent"],
              "description": "Image pull policy"
            }
          },
          "required": ["repository", "tag", "pullPolicy"]
        },
        "env": {
          "type": "object",
          "properties": {
            "PUID": {
              "type": "integer",
              "description": "Process User ID"
            },
            "PGID": {
              "type": "integer",
              "description": "Process Group ID"
            },
            "TZ": {
              "type": "string",
              "description": "Timezone"
            },
            "UMASK_SET": {
              "type": "string",
              "description": "Umask setting"
            },
            "LOG_LEVEL": {
              "type": "string",
              "enum": ["debug", "info", "warn", "error"],
              "description": "Log level"
            },
            "PORT": {
              "type": "string",
              "description": "Port for Overseerr to listen on"
            }
          }
        },
        "service": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["ClusterIP", "NodePort", "LoadBalancer"],
              "description": "Service type"
            },
            "port": {
              "type": "integer",
              "minimum": 1,
              "maximum": 65535,
              "description": "Service port"
            },
            "targetPort": {
              "type": "integer",
              "minimum": 1,
              "maximum": 65535,
              "description": "Target port on the pod"
            }
          }
        },
        "ingress": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable ingress"
            },
            "className": {
              "type": "string",
              "description": "Ingress class name"
            },
            "annotations": {
              "type": "object",
              "description": "Ingress annotations"
            },
            "hosts": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "host": {
                    "type": "string"
                  },
                  "paths": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string"
                        },
                        "pathType": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "tls": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        },
        "persistence": {
          "type": "object",
          "properties": {
            "config": {
              "$ref": "#/$defs/persistenceVolume"
            },
            "logs": {
              "$ref": "#/$defs/persistenceVolume"
            }
          }
        },
        "resources": {
          "$ref": "#/$defs/resources"
        },
        "securityContext": {
          "$ref": "#/$defs/securityContext"
        },
        "configMap": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "data": {
              "type": "object"
            },
            "scripts": {
              "type": "object"
            }
          }
        },
        "settings": {
          "type": "object",
          "properties": {
            "baseUrl": {
              "type": "string",
              "description": "Base URL for Overseerr"
            },
            "trustProxy": {
              "type": "boolean",
              "description": "Trust proxy headers"
            },
            "apiRateLimit": {
              "type": "boolean",
              "description": "API rate limiting"
            },
            "apiRateLimitMax": {
              "type": "integer",
              "description": "Maximum API requests per window"
            },
            "apiRateLimitWindow": {
              "type": "integer",
              "description": "API rate limit window in minutes"
            }
          }
        },
        "homepage": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "group": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "widget": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "pod": {
      "type": "object",
      "properties": {
        "restartPolicy": {
          "type": "string",
          "enum": ["Always", "OnFailure", "Never"]
        },
        "securityContext": {
          "$ref": "#/$defs/securityContext"
        },
        "nodeSelector": {
          "type": "object"
        },
        "tolerations": {
          "type": "array"
        },
        "affinity": {
          "type": "object"
        },
        "annotations": {
          "type": "object"
        },
        "labels": {
          "type": "object"
        }
      }
    },
    "serviceAccount": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean"
        },
        "annotations": {
          "type": "object"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "networkPolicy": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "ingress": {
          "type": "array"
        },
        "egress": {
          "type": "array"
        }
      }
    },
    "podDisruptionBudget": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "minAvailable": {
          "type": ["integer", "string"]
        },
        "maxUnavailable": {
          "type": ["integer", "string"]
        }
      }
    },
    "serviceMonitor": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "labels": {
          "type": "object"
        },
        "annotations": {
          "type": "object"
        },
        "interval": {
          "type": "string"
        },
        "scrapeTimeout": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "params": {
          "type": "object"
        },
        "basicAuth": {
          "type": "object"
        },
        "bearerTokenSecret": {
          "type": "object"
        },
        "tlsConfig": {
          "type": "object"
        },
        "relabelings": {
          "type": "array"
        },
        "metricRelabelings": {
          "type": "array"
        },
        "namespaceSelector": {
          "type": "object"
        },
        "targetLabels": {
          "type": "array"
        }
      }
    },
    "hpa": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "minReplicas": {
          "type": "integer",
          "minimum": 1
        },
        "maxReplicas": {
          "type": "integer",
          "minimum": 1
        },
        "targetCPUUtilizationPercentage": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        },
        "targetMemoryUtilizationPercentage": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        }
      }
    }
  },
  "$defs": {
    "persistenceVolume": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "storageClass": {
          "type": "string"
        },
        "accessMode": {
          "type": "string",
          "enum": ["ReadWriteOnce", "ReadOnlyMany", "ReadWriteMany"]
        },
        "size": {
          "type": "string"
        },
        "mountPath": {
          "type": "string"
        }
      }
    },
    "resources": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string"
            },
            "memory": {
              "type": "string"
            }
          }
        },
        "requests": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string"
            },
            "memory": {
              "type": "string"
            }
          }
        }
      }
    },
    "securityContext": {
      "type": "object",
      "properties": {
        "runAsUser": {
          "type": "integer"
        },
        "runAsGroup": {
          "type": "integer"
        },
        "fsGroup": {
          "type": "integer"
        },
        "runAsNonRoot": {
          "type": "boolean"
        },
        "readOnlyRootFilesystem": {
          "type": "boolean"
        }
      }
    }
  }
}
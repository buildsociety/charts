1. Get the application URL by running these commands:
{{- if .Values.bazarr.ingress.enabled }}
{{- range $host := .Values.bazarr.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.bazarr.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.bazarr.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "bazarr.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.bazarr.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "bazarr.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "bazarr.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.bazarr.service.port }}
{{- else if contains "ClusterIP" .Values.bazarr.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "{{- include "bazarr.selectorLabels" . | nindent 4 }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Configuration:
   - Default setup requires configuring Sonarr and Radarr connections
   - Web interface port: {{ .Values.bazarr.service.port }}
   - Bazarr will automatically download subtitles for your media
   
{{- if .Values.gluetun.enabled }}

3. VPN Configuration (Gluetun):
   - VPN is ENABLED and running as a sidecar container
   - All Bazarr traffic will route through the VPN
   {{- if .Values.gluetun.vpn.pia.enabled }}
   - Using Private Internet Access (PIA)
   - Server regions: {{ .Values.gluetun.vpn.pia.serverRegions }}
   {{- else if .Values.gluetun.vpn.nordvpn.enabled }}
   - Using NordVPN with WireGuard
   {{- else if .Values.gluetun.vpn.mullvad.enabled }}
   - Using Mullvad with WireGuard
   - Server cities: {{ .Values.gluetun.vpn.mullvad.serverCities }}
   {{- end }}
   
   VPN Control Interface:
   kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8000:{{ .Values.gluetun.ports.control }}
   # Then visit http://127.0.0.1:8000
   
   HTTP Proxy (if enabled):
   - Port: {{ .Values.gluetun.ports.httpProxy }}
   
   To check VPN status:
   kubectl --namespace {{ .Release.Namespace }} logs $POD_NAME -c gluetun

{{- else }}

3. VPN Configuration:
   - VPN is DISABLED
   - Bazarr will connect directly to the internet
   - Consider enabling Gluetun for privacy and security

{{- end }}


4. Storage:
{{- if .Values.bazarr.persistence.config.enabled }}
   - Config: {{ .Values.bazarr.persistence.config.size }} ({{ .Values.bazarr.persistence.config.mountPath }})
{{- end }}
{{- if .Values.bazarr.persistence.tv.enabled }}
   - TV Shows: {{ .Values.bazarr.persistence.tv.size }} ({{ .Values.bazarr.persistence.tv.mountPath }}) [READ-ONLY]
{{- end }}
{{- if .Values.bazarr.persistence.movies.enabled }}
   - Movies: {{ .Values.bazarr.persistence.movies.size }} ({{ .Values.bazarr.persistence.movies.mountPath }}) [READ-ONLY]
{{- end }}
{{- if .Values.bazarr.persistence.anime.enabled }}
   - Anime: {{ .Values.bazarr.persistence.anime.size }} ({{ .Values.bazarr.persistence.anime.mountPath }}) [READ-ONLY]
{{- end }}

5. Security:
   - Running as UID/GID: {{ .Values.bazarr.env.PUID }}/{{ .Values.bazarr.env.PGID }}
   - Timezone: {{ .Values.bazarr.env.TZ }}
   - Media volumes are mounted read-only for security
   
6. Troubleshooting:
   
   View logs:
   kubectl --namespace {{ .Release.Namespace }} logs $POD_NAME -c bazarr
   
   Get shell access:
   kubectl --namespace {{ .Release.Namespace }} exec -it $POD_NAME -c bazarr -- /bin/bash
   
   Check all containers in pod:
   kubectl --namespace {{ .Release.Namespace }} describe pod $POD_NAME

{{- if .Values.bazarr.homepage.enabled }}

7. Homepage Integration:
   - Labels configured for homepage dashboard integration
   - Group: {{ .Values.bazarr.homepage.group }}
   - Widget type: {{ .Values.bazarr.homepage.widget.type }}
{{- if .Values.bazarr.homepage.widget.key }}
   - API key configured for widget
{{- else }}
   - Remember to set homepage.widget.key in values.yaml for full widget functionality
{{- end }}

{{- end }}

8. Integration with Sonarr/Radarr:
   - Configure Sonarr connection: Settings > General > Host Management
   - Configure Radarr connection: Settings > General > Host Management
   - Set up subtitle providers: Settings > Providers
   - Configure languages: Settings > Languages

For more information, visit:
- Bazarr documentation: https://wiki.bazarr.media/
- Chart repository: https://github.com/your-repo/charts